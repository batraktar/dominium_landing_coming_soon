import os
import django

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from asgiref.sync import sync_to_async  # ‚Üê –æ—Å—å —â–æ –¥–æ–¥–∞—î–º–æ

# –Ü–º–ø–æ—Ä—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'landing_doominium_real_state.settings')
django.setup()

from accounts.models import CustomUser, TelegramVerification

# üîê –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∑ BotFather
BOT_TOKEN = '7630269852:AAHqi0XBWhfcPjrJElFij0mFY4BSfM51PJY'

# üëá –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –±–µ–∑–ø–µ—á–Ω–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ ORM —É async-–∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ
@sync_to_async
def get_verification_for_user(tg_username):
    user = CustomUser.objects.get(telegram_username=tg_username)
    verification = TelegramVerification.objects.filter(user=user, is_used=False).latest('created_at')
    return verification

# üëã –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tg_username = update.effective_user.username

    try:
        verification = await get_verification_for_user(tg_username)
    except CustomUser.DoesNotExist:
        await update.message.reply_text("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–∫–∏–º telegram_username –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Å—è –Ω–∞ —Å–∞–π—Ç—ñ.")
        return
    except TelegramVerification.DoesNotExist:
        await update.message.reply_text("‚ö†Ô∏è –¢–æ–±—ñ —â–µ –Ω–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –∫–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.")
        return

    # üîó –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞
    confirm_url = f"http://192.168.0.167:8000/verify/{verification.code}/"  # ‚Üê –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ http
    button = InlineKeyboardButton("‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç", url=confirm_url)
    markup = InlineKeyboardMarkup([[button]])

    await update.message.reply_text("üëã –ü—Ä–∏–≤—ñ—Ç! –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é:", reply_markup=markup)

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É—î–º–æ /start...")
    app.run_polling()
